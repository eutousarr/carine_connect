generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id          String   @id
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String?  @db.VarChar(255)
  content     String?
  image       String?  @db.VarChar(255)
  authorId    String?
  authorName  String?
  authorImage String?

  @@map("articles")
}

model Post {
  id          String   @id @default(cuid())
  title       String
  content     String
  slug        String   @unique
  imageUrl    String
  authorId    String
  authorName  String
  authorImage String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("posts")
}

model Contact {
  id          Int      @id @default(autoincrement())
  prenom      String
  nom         String
  email       String   @unique
  description String?
  phone       String?
  adresse     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("contacts")
}

model Eleve {
  id           Int           @id @default(autoincrement())
  matricule    String
  nom          String
  prenom       String
  sexe         Sexe
  datenais     String?
  lieunais     String?
  adresse      String?
  email        String?
  phone        String?
  photo        String?
  updatedAt    DateTime?     @updatedAt
  inscriptions Inscription[]
  notes        Note[]
  resultats    Resultat[]    @relation("EleveToResultat")

  @@map("eleves")
}

model Student {
  id        Int     @id @default(autoincrement())
  matricule String
  nom       String
  prenom    String
  sexe      String
  datenais  String?
  lieunais  String?
  adresse   String?
  email     String?
  phone     String?
  photo     String?

  @@map("students")
}

model Inscription {
  id        String   @id @default(cuid())
  annee     Annee    @default(AnScol_2025_2026)
  classe    Classe   @default(CI)
  montant   Int?     @default(0)
  frais     Int?     @default(0)
  moyenne1  Float?   @default(0)
  moyenne2  Float?   @default(0)
  moyenne3  Float?   @default(0)
  eleveId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime
  eleves    Eleve    @relation(fields: [eleveId], references: [id])

  @@map("inscriptions")
}

model Evaluation {
  id        Int        @id @default(autoincrement())
  name      String
  slug      String
  notes     Note[]     @relation("EvaluationToNote")
  resultats Resultat[] @relation("EvaluationToResultat")

  @@map("evaluations")
}

model Discipline {
  id       Int       @id @default(autoincrement())
  name     String
  slug     String    @unique
  matieres Matiere[]

  @@index([slug])
  @@map("disciplines")
}

model Matiere {
  id           Int        @id @default(autoincrement())
  name         String
  slug         String     @unique
  coefficient  Int        @default(1)
  disciplineId Int
  discipline   Discipline @relation(fields: [disciplineId], references: [id])
  notes        Note[]     @relation("MatiereToNote")

  @@index([slug])
  @@map("matieres")
}

model Note {
  id           Int        @id @default(autoincrement())
  eleveId      Int
  eleves       Eleve      @relation(fields: [eleveId], references: [id])
  annee        Annee
  score        Int        @default(0)
  matiereId    Int
  evaluationId Int
  evaluation   Evaluation @relation("EvaluationToNote", fields: [evaluationId], references: [id])
  matiere      Matiere    @relation("MatiereToNote", fields: [matiereId], references: [id])

  // ortho         Float?
  // production    Float?
  // vocabulaire   Float?
  // grammaire     Float?
  // lecture       Float?
  // conjugaison   Float?
  // ecriture      Float?
  // numeriques    Float?
  // mesures       Float?
  // geometrie     Float?
  // probleme      Float?
  // histoire      Float?
  // geographie    Float?
  // ist           Float?
  // vivreEnsemble Float?
  // vivreMilieu   Float?
  // dessin        Float?
  // recitation    Float?
  // total         Float?
  // moyenne       Float?
  // rang          Int?

  @@map("notes")
}

model Resultat {
  id           Int        @id @default(autoincrement())
  eleveId      Int
  annee        String?
  evaluationId Int
  total        Int        @default(0)
  moyenne      Float?
  rang         Int?
  observation  String?
  decision     Conseil?   @default(Passe)
  eleve        Eleve      @relation("EleveToResultat", fields: [eleveId], references: [id])
  evaluation   Evaluation @relation("EvaluationToResultat", fields: [evaluationId], references: [id])

  @@map("resultats")
}

enum Annee {
  AnScol_2021_2022
  AnScol_2022_2023
  AnScol_2023_2024
  AnScol_2024_2025
  AnScol_2025_2026
  AnScol_2026_2027
  AnScol_2027_2028
  AnScol_2028_2029
  AnScol_2029_2030
}

enum Classe {
  CI
  CP
  CE1
  CE2
  CM1
  CM2
}

enum Conseil {
  Passe
  Redouble
  examen
  Exclu
}

enum Sexe {
  Masculin
  Feminin
}

enum SlugMatiere {
  orthographe
  productionEcrite
  vocabulaire
  grammaire
  lecture
  conjugaison
  ecriture
  numeriques
  mesures
  geometrie
  probleme
  histoire
  geographie
  ist
  vivreEnsemble
  vivreMilieu
  dessin
  recitation
}

enum SlugDiscipline {
  LanguageEtCompréhension
  Mathématiques
  ESVS
  ESPA
}
